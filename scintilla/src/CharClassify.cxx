// Scintilla source code edit control
/** @file CharClassify.cxx
 ** Character classifications used by Document and RESearch.
 **/
// Copyright 2006 by Neil Hodgson <neilh@scintilla.org>
// The License.txt file describes the conditions under which this software may be distributed.

#include <cstdlib>
#include <cassert>
#include <cstring>

#include <vector>
#include <memory>

#include "CharacterSet.h"
#include "CharClassify.h"

using namespace Scintilla;

CharClassify::CharClassify() noexcept : charClass{} {
	SetDefaultCharClasses(true);
}

void CharClassify::SetDefaultCharClasses(bool includeWordClass) noexcept {
	// Initialize all char classes to default values
	for (int ch = 0; ch < 128; ch++) {
		if (ch == '\r' || ch == '\n')
			charClass[ch] = ccNewLine;
		else if (ch < 0x20 || ch == ' ')
			charClass[ch] = ccSpace;
		else if (includeWordClass && (IsAlphaNumeric(ch) || ch == '_'))
			charClass[ch] = ccWord;
		else
			charClass[ch] = ccPunctuation;
	}

	const int w = includeWordClass ? ccWord : ccPunctuation;
	memset(charClass + 128, w, 128);
}

void CharClassify::SetCharClasses(const unsigned char *chars, cc newCharClass) noexcept {
	// Apply the newCharClass to the specifed chars
	if (chars) {
		const unsigned char w = static_cast<unsigned char>(newCharClass);
		while (*chars) {
			charClass[*chars] = w;
			chars++;
		}
	}
}

void CharClassify::SetCharClassesEx(const unsigned char *chars, int length) noexcept {
	if (chars == nullptr || length <= 0) {
		memset(charClass + 128, ccWord, 128);
	} else if (length == 16) {
		for (int i = 0; i < 128; i++) {
			const unsigned char w = 1 + ((chars[i >> 3] >> (i & 7)) & 1);
			charClass[i + 128] = w;
		}
	} else if (length == 32) {
		for (int i = 0; i < 128; i++) {
			const unsigned char w = (chars[i >> 2] >> (2 * (i & 3))) & 3;
			charClass[i + 128] = w;
		}
	}
}

int CharClassify::GetCharsOfClass(cc characterClass, unsigned char *buffer) const noexcept {
	// Get characters belonging to the given char class; return the number
	// of characters (if the buffer is NULL, don't write to it).
	int count = 0;
	for (int ch = maxChar - 1; ch >= 0; --ch) {
		if (charClass[ch] == characterClass) {
			++count;
			if (buffer) {
				*buffer = static_cast<unsigned char>(ch);
				buffer++;
			}
		}
	}
	return count;
}

namespace {

template <typename DataType, int DataSize, typename ValueType, int BufferSize, int ValueBit=3>
void ExpandRLE(const DataType (&data)[DataSize], ValueType (&buffer)[BufferSize]) noexcept {
	constexpr DataType mask = (1 << ValueBit) - 1;
	ValueType *p = buffer;

	for (int i = 0; i < DataSize; i++) {
		DataType ch = data[i];
		const ValueType value = ch & mask;
		ch >>= ValueBit;
		assert(p + ch <= buffer + BufferSize);
		while (ch--) {
			*p++ = value;
		}
	}
	// ensure full expanded
	assert(p == buffer + BufferSize);
}

//++Autogenerated -- start of section automatically generated
// Created with Python 3.7.4, Unicode 11.0.0
const unsigned short CharClassifyRLE_BMP[] = {
264, 123, 82, 59, 210, 51, 210, 35, 272, 75, 10, 19, 8, 35, 18, 11, 10, 27, 18, 11,
26, 11, 186, 11, 250, 11, 3666, 35, 98, 115, 42, 59, 10, 11, 10, 139, 938, 11, 18, 16,
34, 11, 10, 32, 19, 10, 11, 26, 8, 10, 8, 162, 8, 666, 11, 1114, 11, 1386, 8, 306,
16, 10, 51, 330, 19, 16, 27, 8, 362, 11, 10, 11, 18, 11, 18, 11, 10, 64, 218, 32,
34, 19, 136, 83, 90, 11, 16, 19, 594, 35, 818, 11, 66, 8, 11, 82, 11, 154, 19, 10,
115, 16, 474, 16, 810, 112, 434, 35, 10, 16, 10, 19, 370, 16, 123, 8, 226, 16, 11, 8,
90, 424, 170, 8, 66, 168, 122, 8, 1034, 19, 82, 11, 154, 8, 66, 16, 18, 16, 178, 8,
58, 8, 10, 24, 34, 16, 74, 16, 18, 16, 34, 64, 10, 32, 18, 8, 42, 16, 98, 19,
50, 19, 10, 11, 10, 16, 26, 8, 50, 32, 18, 16, 178, 8, 58, 8, 18, 8, 18, 8,
18, 16, 10, 8, 42, 32, 18, 16, 26, 24, 10, 56, 34, 8, 10, 56, 130, 11, 80, 26,
8, 74, 8, 26, 8, 178, 8, 58, 8, 18, 8, 42, 16, 82, 8, 26, 8, 26, 16, 10,
120, 34, 16, 82, 19, 56, 58, 8, 26, 8, 66, 16, 18, 16, 178, 8, 58, 8, 18, 8,
42, 16, 74, 16, 18, 16, 26, 64, 18, 32, 18, 8, 42, 16, 82, 11, 58, 80, 18, 8,
50, 24, 26, 8, 34, 24, 18, 8, 10, 8, 18, 24, 18, 24, 26, 24, 98, 32, 42, 24,
26, 8, 34, 16, 10, 48, 10, 112, 106, 67, 40, 106, 8, 26, 8, 186, 8, 130, 24, 66,
8, 26, 8, 34, 56, 18, 8, 26, 40, 34, 16, 82, 64, 58, 11, 34, 11, 66, 8, 26,
8, 186, 8, 82, 8, 42, 16, 74, 8, 26, 8, 34, 56, 18, 56, 10, 8, 34, 16, 82,
8, 18, 104, 34, 8, 66, 8, 26, 8, 410, 8, 26, 8, 42, 11, 32, 130, 16, 154, 11,
50, 16, 18, 8, 146, 24, 194, 8, 74, 8, 10, 16, 58, 24, 10, 32, 50, 8, 10, 8,
66, 48, 82, 16, 18, 11, 96, 466, 32, 11, 122, 11, 82, 19, 296, 18, 8, 10, 16, 18,
8, 10, 16, 10, 48, 34, 8, 58, 8, 26, 8, 10, 8, 10, 16, 18, 8, 106, 8, 26,
16, 42, 8, 10, 8, 50, 16, 82, 16, 34, 256, 10, 187, 18, 51, 162, 11, 10, 11, 10,
11, 10, 35, 82, 8, 290, 32, 162, 11, 146, 8, 290, 8, 67, 10, 51, 8, 107, 296, 594,
51, 626, 19, 306, 8, 10, 40, 10, 16, 346, 11, 34, 2052, 586, 8, 34, 16, 58, 8, 10,
8, 34, 16, 330, 8, 34, 16, 266, 8, 34, 16, 58, 8, 10, 8, 34, 16, 122, 8, 458,
8, 34, 16, 538, 16, 26, 75, 162, 24, 130, 83, 48, 690, 16, 50, 16, 11, 4962, 19, 138,
8, 210, 19, 24, 602, 27, 90, 56, 106, 8, 58, 88, 170, 19, 72, 162, 96, 106, 8, 26,
8, 18, 96, 674, 27, 10, 35, 18, 16, 82, 48, 82, 48, 91, 26, 16, 82, 48, 714, 56,
346, 40, 562, 80, 250, 8, 98, 32, 98, 32, 11, 24, 19, 322, 16, 42, 88, 354, 32, 210,
48, 90, 24, 275, 226, 16, 19, 506, 8, 234, 16, 90, 48, 82, 48, 59, 10, 51, 16, 122,
520, 610, 32, 82, 139, 74, 75, 24, 930, 64, 35, 450, 24, 43, 82, 24, 394, 19, 74, 56,
346, 16, 26, 67, 64, 26, 11, 306, 48, 2002, 8, 2266, 16, 50, 16, 306, 16, 50, 16, 66,
8, 10, 8, 10, 8, 10, 8, 250, 16, 426, 8, 58, 11, 10, 27, 26, 8, 58, 27, 34,
16, 50, 8, 27, 106, 27, 16, 26, 8, 58, 19, 136, 195, 17, 48, 379, 136, 18, 16, 50,
43, 90, 43, 8, 106, 24, 259, 128, 266, 120, 19, 10, 35, 10, 19, 82, 11, 10, 27, 42,
51, 10, 11, 10, 11, 10, 11, 34, 11, 90, 19, 34, 43, 42, 35, 10, 11, 466, 19, 32,
5307, 200, 91, 168, 482, 627, 178, 5043, 242, 7939, 16, 259, 16, 395, 8, 427, 8, 378, 8, 378,
8, 1066, 51, 74, 40, 35, 10, 19, 306, 8, 10, 40, 10, 16, 450, 56, 10, 11, 112, 194,
72, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 258, 379, 10,
251, 392, 211, 8, 715, 96, 1715, 208, 99, 40, 35, 28, 203, 124, 11, 44, 19, 44, 27, 8,
692, 16, 20, 19, 28, 11, 724, 11, 36, 40, 348, 8, 756, 8, 19, 36, 83, 220, 40, 291,
96, 132, 251, 8, 84, 243, 68, 11, 124, 259, 84, 315, 124, 507, 8, 2051, 52660, 80, 515, 65532,
65532, 36756, 128, 9324, 24, 443, 72, 370, 19, 2154, 27, 226, 160, 410, 11, 82, 11, 922, 51, 64,
187, 74, 19, 826, 19, 378, 488, 394, 35, 32, 50, 35, 48, 418, 35, 64, 562, 64, 19, 82,
48, 194, 27, 10, 11, 394, 19, 290, 88, 11, 236, 24, 522, 107, 8, 90, 32, 19, 250, 8,
442, 72, 114, 16, 82, 16, 35, 186, 27, 586, 192, 26, 19, 130, 19, 42, 80, 50, 16, 50,
16, 50, 72, 58, 8, 58, 8, 346, 11, 82, 80, 986, 11, 18, 16, 82, 48, 65532, 23852, 96,
188, 32, 396, 65528, 2088, 2932, 16, 852, 304, 58, 96, 42, 40, 98, 11, 106, 8, 42, 8, 10,
8, 18, 8, 18, 8, 866, 131, 136, 2906, 19, 128, 514, 16, 434, 320, 98, 19, 16, 130, 83,
48, 130, 283, 8, 155, 8, 35, 32, 42, 8, 1082, 32, 123, 82, 59, 210, 51, 210, 91, 716,
24, 52, 16, 52, 16, 52, 16, 28, 24, 59, 8, 59, 104, 19, 16,
};

}

const unsigned char CharClassify::CharClassifyTable[] = {
// CharClassifyTable1
0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38,
34, 40, 42, 44, 46, 48, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 52, 50,
50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 54,
50, 50, 56, 58, 60, 62, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
50, 50, 50, 50, 50, 50, 50, 64, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98,
100, 102, 104, 106, 108, 110, 112, 66, 66, 66, 66, 66, 108, 108, 114, 66, 66, 66, 66, 66,
66, 66, 108, 116, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
108, 118, 66, 120, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 122, 50, 124, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 126, 128, 66, 66,
66, 66, 130, 66, 66, 66, 66, 66, 66, 66, 66, 66, 132, 134, 136, 138, 34, 140, 66, 66,
142, 66, 66, 66, 144, 66, 146, 148, 150, 152, 34, 154, 156, 158, 66, 66, 50, 50, 50, 50,
50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 160,
50, 50, 50, 50, 50, 50, 50, 162, 164, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 166,
50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 168, 66, 66, 66, 66, 66, 66,
50, 170, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 172, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
// CharClassifyTable2
0, 0, 0, 0, 1, 2, 3, 4, 5, 3, 3, 6, 5, 3, 3, 7, 0, 0, 0, 0,
1, 8, 9, 10, 3, 3, 11, 3, 3, 3, 11, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 12, 3, 4, 2, 13, 14, 2, 2, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 15, 16, 17, 18, 3, 3, 19, 3, 3, 3,
3, 3, 3, 3, 3, 3, 20, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 21, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 22, 3, 3, 3, 23, 24, 3, 3, 3, 3, 3, 25, 22, 3,
3, 3, 3, 20, 26, 0, 3, 3, 3, 27, 28, 0, 29, 2, 3, 30, 3, 3, 3, 3,
3, 3, 3, 3, 3, 12, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 31, 32,
3, 33, 3, 34, 2, 35, 3, 3, 3, 3, 3, 3, 3, 36, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 37, 0, 3, 3, 3, 3, 3, 3, 38, 39, 3, 3, 3, 3,
3, 40, 2, 41, 3, 3, 3, 42, 3, 43, 0, 0, 0, 0, 0, 0, 3, 3, 44, 40,
0, 0, 45, 3, 19, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
46, 3, 5, 3, 47, 48, 49, 3, 3, 50, 51, 52, 48, 53, 54, 55, 56, 3, 57, 58,
59, 27, 49, 3, 3, 50, 60, 61, 27, 62, 63, 64, 65, 3, 66, 0, 59, 67, 19, 3,
3, 50, 68, 52, 67, 69, 70, 0, 56, 3, 71, 22, 59, 48, 49, 3, 3, 50, 68, 52,
48, 62, 65, 55, 56, 3, 5, 0, 72, 73, 74, 75, 76, 73, 3, 77, 73, 74, 78, 0,
65, 3, 6, 79, 3, 44, 50, 3, 3, 50, 3, 80, 44, 74, 81, 43, 56, 3, 0, 11,
31, 44, 50, 3, 3, 50, 47, 52, 44, 74, 81, 82, 56, 3, 83, 0, 47, 44, 50, 3,
3, 3, 3, 3, 44, 84, 85, 3, 56, 3, 3, 33, 72, 3, 23, 86, 3, 3, 19, 87,
23, 88, 89, 3, 65, 3, 90, 0, 22, 3, 3, 3, 3, 3, 3, 91, 3, 11, 3, 92,
0, 0, 0, 0, 93, 94, 85, 22, 95, 72, 3, 69, 89, 40, 3, 52, 0, 0, 0, 0,
96, 2, 2, 4, 3, 3, 97, 98, 3, 22, 3, 3, 3, 99, 22, 3, 15, 3, 3, 22,
3, 3, 3, 100, 101, 102, 2, 79, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3,
3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 38, 3, 3, 3, 3, 67, 103, 3, 3,
3, 3, 3, 104, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 3, 3, 3, 3,
3, 3, 3, 3, 3, 74, 23, 74, 3, 3, 3, 3, 3, 74, 3, 3, 3, 3, 74, 23,
74, 3, 23, 3, 3, 3, 3, 3, 3, 3, 74, 3, 3, 3, 3, 3, 3, 3, 3, 36,
2, 5, 3, 99, 3, 3, 2, 71, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 40, 40,
5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 34, 3, 3,
22, 3, 3, 28, 3, 3, 3, 3, 3, 3, 3, 3, 3, 106, 3, 70, 3, 44, 99, 0,
3, 3, 107, 0, 3, 3, 108, 0, 3, 44, 109, 0, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 110, 111, 3, 37, 3, 37, 2, 112, 3, 37, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 70, 3, 3, 3, 3, 3, 43, 3, 3, 3, 3, 3, 3, 3, 3, 40, 0,
3, 3, 3, 23, 3, 108, 3, 108, 113, 3, 3, 3, 3, 40, 99, 0, 3, 3, 3, 3,
3, 108, 3, 3, 3, 37, 3, 114, 2, 2, 2, 2, 3, 3, 3, 115, 3, 3, 3, 3,
3, 3, 3, 23, 3, 3, 3, 48, 3, 37, 3, 37, 116, 35, 3, 23, 0, 0, 0, 0,
0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 108, 3, 4, 2, 117, 118, 119,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 108, 120, 3, 3, 3, 3,
3, 3, 3, 121, 3, 80, 3, 3, 3, 3, 3, 38, 3, 70, 3, 3, 3, 3, 3, 36,
2, 0, 104, 3, 3, 3, 3, 37, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 19,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 40, 40, 3, 3, 3, 3,
40, 40, 3, 122, 3, 3, 3, 40, 3, 3, 3, 3, 3, 3, 44, 123, 124, 13, 56, 125,
3, 13, 126, 107, 0, 0, 2, 2, 2, 127, 2, 2, 2, 2, 2, 41, 0, 0, 52, 128,
3, 129, 3, 99, 2, 2, 2, 2, 0, 0, 3, 3, 3, 3, 70, 0, 130, 131, 132, 133,
14, 134, 3, 57, 135, 136, 3, 3, 3, 3, 3, 3, 3, 92, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 41, 0, 0, 0,
2, 79, 0, 0, 3, 3, 3, 3, 3, 3, 3, 118, 2, 2, 2, 2, 2, 2, 2, 2,
2, 131, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 137, 3, 3, 3, 118, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 138, 2, 2, 2, 35, 2, 2, 2, 2, 2, 2, 139, 2, 2,
2, 2, 2, 41, 3, 3, 3, 3, 3, 23, 3, 3, 3, 3, 3, 23, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 13, 117, 108, 140, 3, 3, 3, 3,
67, 103, 3, 3, 3, 3, 3, 3, 3, 54, 141, 54, 3, 3, 23, 0, 23, 23, 23, 23,
23, 23, 23, 23, 3, 3, 3, 3, 2, 2, 2, 2, 2, 116, 2, 2, 2, 41, 0, 0,
0, 0, 0, 0, 2, 2, 2, 142, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 143, 0,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 35, 0, 0, 0, 2, 143, 144, 2, 2, 2, 145, 105, 146, 147,
148, 105, 105, 105, 105, 105, 105, 105, 105, 105, 149, 150, 145, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 151, 152, 105, 105, 105, 105, 105, 148, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 149, 153, 2, 105, 105, 105, 154, 2, 2, 2, 2, 143, 0, 105, 105, 2, 2, 2, 41,
105, 155, 2, 2, 2, 105, 145, 105, 2, 2, 2, 2, 105, 155, 2, 2, 2, 2, 145, 105,
2, 2, 2, 2, 2, 2, 2, 41, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 156, 0,
2, 2, 2, 2, 2, 2, 2, 2, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 0, 0, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 157, 2, 2, 2, 2, 2, 2, 41, 0, 3, 3,
3, 3, 3, 38, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 13, 3, 3,
3, 108, 0, 0, 3, 3, 3, 3, 3, 3, 104, 20, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 4, 0, 2, 2, 116, 3, 131, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 158, 3, 3, 3, 3, 3, 37, 0, 0, 0, 0, 0, 0, 54, 3,
3, 3, 3, 3, 3, 143, 38, 71, 3, 3, 3, 3, 3, 3, 118, 0, 3, 3, 3, 3,
3, 3, 3, 3, 40, 29, 3, 37, 3, 3, 3, 159, 3, 3, 3, 3, 3, 38, 3, 3,
3, 3, 108, 160, 105, 105, 105, 157, 3, 3, 3, 3, 3, 3, 3, 3, 96, 161, 3, 162,
3, 3, 3, 23, 3, 3, 3, 3, 3, 3, 23, 0, 3, 40, 3, 163, 3, 3, 11, 131,
3, 3, 3, 3, 3, 3, 3, 3, 43, 0, 0, 164, 3, 3, 165, 0, 166, 166, 166, 0,
23, 23, 3, 3, 3, 3, 3, 104, 40, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 167, 3, 37, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
168, 0, 105, 105, 149, 169, 105, 105, 105, 105, 105, 168, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 156, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 170, 0, 0, 0, 0, 23, 0, 45, 171, 3, 33, 23, 89,
172, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 2, 71, 0, 45, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 38, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 86, 3, 3, 3, 3, 3,
3, 0, 0, 0, 0, 0, 3, 173, 3, 3, 2, 71, 3, 3, 2, 2, 2, 2, 174, 2,
41, 143, 44, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 99,
1, 2, 3, 4, 5, 3, 3, 6, 5, 3, 3, 6, 175, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 149, 176, 176, 176, 177, 41, 41, 0, 178, 3, 47, 3, 3, 23, 3, 3, 179,
3, 40, 3, 40, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 43, 180, 3, 3, 3, 3, 3, 181, 2, 3, 3, 3, 3, 3, 3, 3, 96,
2, 182, 2, 143, 141, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 183, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 99, 3, 3, 3, 3,
3, 3, 70, 0, 3, 3, 3, 108, 3, 3, 3, 3, 108, 171, 3, 3, 3, 43, 3, 3,
3, 3, 3, 43, 3, 3, 3, 184, 3, 3, 3, 3, 108, 3, 185, 0, 0, 0, 0, 0,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 40,
3, 37, 3, 3, 3, 3, 108, 3, 3, 3, 3, 108, 3, 3, 3, 3, 3, 0, 3, 3,
3, 3, 3, 3, 108, 160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 23, 0, 3, 3, 40, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 40, 50, 3, 3, 3, 3, 67, 186, 3, 3, 184, 3,
3, 3, 11, 5, 3, 3, 3, 23, 54, 3, 0, 0, 0, 0, 0, 0, 3, 3, 187, 45,
3, 3, 3, 181, 3, 3, 3, 188, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3,
3, 3, 3, 85, 3, 3, 86, 3, 3, 3, 3, 3, 189, 85, 47, 22, 3, 3, 40, 27,
3, 70, 2, 141, 3, 3, 3, 11, 3, 3, 3, 3, 0, 0, 0, 0, 3, 5, 3, 3,
23, 45, 41, 0, 3, 3, 3, 3, 3, 3, 40, 1, 3, 3, 40, 3, 3, 3, 43, 3,
3, 3, 37, 190, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3,
3, 3, 3, 3, 3, 70, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 43, 0,
3, 3, 3, 3, 3, 3, 43, 86, 3, 3, 3, 3, 3, 0, 3, 37, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 23, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 3, 3,
3, 3, 13, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 11, 35, 86, 3, 3, 3, 0, 54,
3, 3, 3, 3, 3, 3, 3, 191, 71, 0, 3, 3, 3, 70, 3, 37, 3, 3, 3, 3,
3, 3, 44, 3, 192, 0, 3, 3, 3, 3, 193, 0, 3, 3, 3, 3, 3, 3, 3, 3,
13, 194, 3, 195, 22, 3, 99, 0, 3, 3, 19, 3, 3, 3, 3, 196, 0, 0, 0, 0,
0, 0, 0, 0, 23, 197, 3, 67, 3, 198, 3, 3, 3, 3, 3, 3, 3, 43, 3, 37,
47, 48, 49, 3, 3, 50, 68, 19, 48, 62, 78, 171, 56, 99, 99, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3,
3, 6, 3, 199, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 20, 0, 3, 37,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
3, 3, 3, 3, 3, 3, 40, 3, 96, 2, 2, 40, 0, 0, 0, 0, 3, 3, 3, 3,
3, 3, 3, 3, 200, 0, 3, 37, 2, 119, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0,
3, 37, 0, 0, 0, 0, 0, 0, 3, 3, 3, 36, 3, 108, 3, 118, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
3, 3, 3, 3, 3, 3, 3, 201, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 43, 54, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 11, 116, 0, 3, 3, 3, 3, 3, 3,
56, 3, 3, 202, 79, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 70, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 3, 50, 3, 3, 3, 3, 23, 3, 203, 0, 3, 3,
3, 99, 131, 3, 3, 3, 86, 3, 3, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0,
23, 19, 3, 3, 3, 3, 23, 204, 3, 0, 3, 37, 67, 50, 3, 3, 3, 23, 19, 70,
3, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
3, 3, 11, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 37, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 23, 119, 0,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 23, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3,
23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3,
3, 3, 3, 70, 3, 3, 3, 23, 3, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 3, 3, 3, 40, 205, 0, 3, 3, 3, 3, 3, 3, 11, 2, 173, 0, 3, 19,
19, 3, 3, 171, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 11, 79,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3,
99, 0, 3, 3, 3, 3, 3, 23, 0, 54, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
170, 0, 0, 0, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 170, 0, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 154, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 168, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 43, 3, 99, 3, 70, 3, 206,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 35, 0, 2, 2, 2, 2,
41, 1, 2, 2, 2, 2, 2, 2, 135, 207, 43, 45, 208, 118, 2, 2, 2, 209, 2, 2,
2, 2, 2, 2, 2, 141, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 210, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 108, 0,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 41, 0, 3, 3, 3, 70, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 44, 3, 3, 3, 3, 3, 3, 3, 3, 44, 211, 212, 3, 213, 47, 3, 3, 3,
3, 3, 3, 3, 67, 36, 44, 44, 3, 3, 3, 214, 89, 86, 50, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 40, 3, 3, 3,
33, 3, 3, 104, 3, 3, 3, 104, 3, 3, 15, 3, 3, 3, 15, 3, 3, 11, 3, 3,
3, 11, 3, 3, 3, 33, 3, 3, 3, 33, 3, 3, 104, 56, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 11, 117, 3, 3, 3, 3, 3, 13, 215, 2, 216, 143, 0, 45,
22, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 23, 3, 3, 49, 172, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 48, 3, 23, 0, 0, 0, 0, 0,
3, 3, 3, 3, 3, 3, 3, 3, 3, 43, 3, 162, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 22, 3, 3, 3, 3, 3, 3, 31, 217, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 3, 3, 3,
93, 22, 218, 219, 88, 220, 93, 122, 93, 218, 218, 64, 3, 19, 3, 108, 59, 19, 3, 108,
0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
2, 2, 2, 2, 2, 143, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 143, 0,
2, 41, 1, 2, 1, 2, 1, 2, 2, 2, 35, 0, 3, 99, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 143, 2, 2, 2, 2, 2, 2, 2, 119, 0, 0, 0, 0, 0, 0,
29, 2, 2, 2, 79, 0, 2, 2, 2, 2, 2, 143, 2, 141, 71, 0, 35, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 119, 0, 2, 119, 2, 71,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 143, 0, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 141, 0, 0, 0, 0, 2, 143, 2, 2, 2, 2, 2, 2,
2, 0, 2, 71, 2, 2, 2, 2, 2, 0, 2, 2, 2, 35, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 2, 143, 2, 2, 2, 2, 2, 41, 2, 2, 2, 2, 2, 2, 221, 222,
2, 2, 2, 2, 79, 0, 2, 71, 79, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 2, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 149, 0, 0, 0, 0, 0, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 157, 0, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 156, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 170, 0, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 223, 0, 0, 0,
105, 105, 105, 156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 0, 0,
// CharClassifyTable
0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 3,
3, 3, 3, 0, 3, 3, 2, 3, 3, 0, 3, 3, 3, 3, 2, 2, 3, 2, 3, 3,
3, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 3,
3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3,
2, 2, 2, 2, 2, 3, 2, 2, 0, 0, 2, 2, 2, 2, 3, 2, 0, 0, 0, 0,
3, 3, 2, 3, 2, 2, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 0, 2, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 3, 3, 3, 3, 3, 3,
2, 3, 3, 0, 0, 3, 3, 3, 3, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 0,
0, 0, 0, 2, 2, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3,
2, 2, 2, 3, 0, 0, 3, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2,
2, 0, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2,
3, 3, 3, 3, 3, 3, 0, 0, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0,
0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 0, 0, 2, 3, 3,
2, 2, 2, 2, 2, 2, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 2, 2, 2, 2,
0, 0, 3, 0, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 2, 2,
0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2,
0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 2, 2, 2,
2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 0, 2, 2, 2, 2, 0, 0,
2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2,
0, 0, 0, 0, 2, 2, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 3, 3,
2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 2, 0, 0, 2, 2, 2, 0, 2, 2, 2,
2, 0, 2, 2, 0, 2, 2, 0, 2, 2, 0, 0, 2, 0, 2, 2, 2, 0, 0, 2,
2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0,
0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2,
2, 2, 0, 2, 2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 2, 0, 0,
2, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 2, 2, 2, 2, 0, 0,
0, 2, 2, 0, 2, 0, 2, 2, 0, 0, 0, 2, 2, 0, 0, 0, 2, 2, 0, 0,
0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 0, 0, 0, 0, 0,
2, 2, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 2, 2, 2, 2, 2, 3,
0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 2, 0,
0, 0, 2, 2, 3, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 3, 2, 2, 3, 3,
0, 0, 0, 0, 0, 2, 2, 0, 2, 0, 0, 2, 2, 0, 2, 0, 0, 2, 0, 0,
0, 2, 2, 2, 0, 2, 0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0,
2, 2, 2, 2, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3,
3, 0, 3, 3, 0, 0, 0, 0, 0, 2, 0, 0, 2, 2, 2, 3, 2, 2, 2, 2,
4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2,
2, 3, 3, 0, 2, 2, 2, 2, 0, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 0,
2, 2, 2, 2, 3, 3, 3, 2, 3, 3, 3, 3, 2, 2, 0, 0, 3, 3, 3, 2,
2, 2, 0, 0, 3, 0, 0, 0, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 3, 3,
2, 2, 2, 2, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2,
2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0,
0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 3, 3, 3, 3, 3, 0, 2, 0, 2,
0, 2, 0, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 2, 2, 2, 0, 2, 2,
2, 2, 2, 2, 0, 3, 3, 3, 0, 0, 2, 2, 2, 0, 2, 2, 1, 1, 0, 0,
0, 0, 0, 0, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 3, 3, 3, 3, 3, 0,
3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
3, 2, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 2, 3, 2, 2, 2, 2, 3, 2,
3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3,
3, 3, 2, 2, 3, 3, 3, 3, 0, 0, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3,
0, 3, 3, 3, 3, 2, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 3,
3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 4, 4, 4,
3, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4,
4, 3, 3, 3, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0,
0, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 0, 0, 0, 0,
0, 4, 4, 4, 3, 3, 4, 4, 4, 4, 3, 3, 4, 4, 4, 0, 0, 0, 0, 0,
4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4,
4, 0, 0, 0, 2, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 2, 3, 2, 2, 2,
0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 2, 2, 2, 0, 0,
0, 0, 3, 3, 2, 2, 0, 0, 3, 3, 3, 3, 0, 0, 0, 2, 2, 2, 3, 3,
3, 3, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 3,
2, 2, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4,
4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 2,
2, 0, 2, 2, 2, 2, 2, 2, 3, 3, 0, 0, 3, 3, 3, 0, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4,
4, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 2, 2, 2, 0, 2, 2, 0, 2,
3, 3, 3, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 3, 3, 3, 2, 2,
3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 0, 0, 2, 2, 2, 2, 2, 2, 0, 3,
3, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 0, 0, 2, 2, 2, 2, 0,
2, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0,
0, 3, 3, 3, 3, 0, 0, 0, 2, 2, 2, 3, 3, 0, 3, 3, 3, 3, 3, 3,
2, 2, 2, 0, 2, 2, 2, 2, 3, 3, 2, 0, 3, 2, 2, 2, 2, 3, 0, 0,
2, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 2, 0, 2, 2,
2, 2, 0, 2, 2, 3, 0, 0, 0, 0, 0, 0, 2, 2, 0, 3, 0, 3, 2, 0,
2, 3, 3, 3, 2, 0, 0, 0, 2, 2, 2, 3, 0, 0, 0, 0, 2, 2, 3, 3,
3, 2, 3, 3, 2, 3, 3, 3, 3, 3, 0, 0, 0, 0, 2, 0, 2, 2, 0, 2,
2, 2, 2, 2, 2, 3, 0, 0, 2, 2, 0, 0, 3, 2, 2, 3, 2, 2, 3, 3,
3, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 3, 3, 2, 2, 2, 2, 3, 3,
3, 3, 2, 2, 2, 3, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 2,
2, 0, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 0,
3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 2, 2,
2, 0, 0, 0, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 0, 0, 0,
0, 2, 0, 2, 0, 2, 2, 2, 3, 0, 0, 3, 3, 3, 3, 0, 0, 0, 3, 0,
3, 3, 3, 3, 4, 0, 0, 0, 0, 0, 0, 0,
};
//--Autogenerated -- end of section automatically generated

unsigned char CharClassify::classifyMap[0xffff + 1];

void CharClassify::InitUnicodeData() noexcept {
	ExpandRLE(CharClassifyRLE_BMP, classifyMap);
#ifndef NDEBUG // Debug test only
	DBCSCharClassify::Get(932);
	DBCSCharClassify::Get(936);
	DBCSCharClassify::Get(949);
	DBCSCharClassify::Get(950);
	DBCSCharClassify::Get(1361);
#endif
}

namespace {

inline void SetRange(bool bs[256], int low, int high) noexcept {
	while (low <= high) {
		bs[low] = true;
		++low;
	}
}

std::vector<std::unique_ptr<DBCSCharClassify>> dbcsCharClassifyList;

//dbcs++Autogenerated -- start of section automatically generated
// Created with Python 3.7.4, Unicode 11.0.0
const unsigned short CharClassifyRLE_CP932[] = {
264, 123, 82, 59, 210, 51, 210, 35, 264, 12, 43, 468, 232, 28, 65528, 65528, 65528, 65528, 552, 139,
36, 11, 44, 283, 8, 395, 60, 451, 10, 99, 536, 123, 82, 59, 210, 11, 18, 11, 10, 8,
11, 210, 35, 692, 600, 508, 8, 188, 64, 194, 67, 282, 83, 84, 8, 52, 536, 266, 123, 122,
8, 146, 36, 19, 26, 291, 244, 64, 67, 114, 552, 11, 8, 35, 10, 11, 8, 19, 18, 19,
18, 11, 26, 11, 330, 8, 258, 11, 82, 11, 66, 11, 266, 11, 306, 536, 282, 8, 26, 64,
66, 11, 58, 8, 43, 16, 82, 11, 362, 411, 72, 19, 536, 250, 187, 10, 56, 11, 8, 251,
756, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8,
1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8,
1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8,
1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8,
1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 65528, 65528, 552,
508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536,
508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536,
508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536,
508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536,
508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536,
508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 1004, 536, 508, 8, 940, 6232,
};

const unsigned short CharClassifyRLE_CP936[] = {
264, 123, 82, 59, 210, 51, 210, 35, 65528, 65528, 65528, 65528, 1576, 508, 8, 1020, 520, 508, 8, 1020,
520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020,
520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020,
520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020,
520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020,
520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020,
520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020,
520, 508, 8, 268, 8, 27, 18, 19, 12, 683, 520, 508, 8, 268, 82, 48, 402, 16, 84, 16,
98, 536, 508, 8, 268, 123, 82, 59, 210, 51, 210, 35, 520, 508, 8, 932, 608, 508, 8, 956,
584, 508, 8, 268, 194, 64, 194, 56, 99, 16, 43, 8, 19, 592, 508, 8, 268, 266, 120, 266,
624, 18, 491, 8, 179, 88, 218, 8, 18, 8, 10, 32, 300, 688, 76, 123, 8, 19, 8, 11,
24, 12, 19, 44, 187, 8, 75, 104, 12, 104, 611, 640, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 980, 560, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520, 508, 8, 1020, 520,
508, 8, 1020, 520, 508, 8, 1020, 520, 132, 648, 756, 2056,
};

const unsigned short CharClassifyRLE_CP949[] = {
264, 123, 82, 59, 210, 51, 210, 35, 65528, 65528, 65528, 65528, 1584, 212, 48, 212, 48, 1012, 528, 212,
48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212,
48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012,
528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212,
48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212,
48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012,
528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212,
48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212,
48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012,
528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212,
48, 212, 48, 1012, 528, 212, 48, 212, 48, 260, 8, 59, 8, 259, 10, 419, 528, 212, 48, 212,
48, 260, 51, 10, 67, 10, 443, 712, 212, 48, 212, 48, 260, 123, 82, 59, 210, 51, 210, 35,
528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 260, 82, 40, 82, 56, 194, 64, 194, 576,
212, 48, 212, 48, 260, 547, 736, 212, 48, 212, 48, 260, 27, 10, 419, 10, 179, 648, 212, 48,
212, 48, 260, 34, 8, 10, 8, 66, 8, 435, 194, 528, 212, 48, 212, 48, 260, 130, 435, 194,
528, 212, 48, 212, 48, 924, 616, 212, 48, 212, 48, 948, 592, 212, 48, 212, 48, 260, 266, 120,
266, 632, 212, 48, 212, 48, 260, 1280, 212, 48, 212, 48, 260, 1280, 212, 48, 212, 48, 260, 1280,
212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48,
212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48,
1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528,
212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48,
212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48,
1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528,
212, 48, 212, 48, 1012, 528, 212, 48, 212, 48, 1012, 528, 148, 624, 756, 1296, 756, 1296, 756, 3344,
756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296,
756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296,
756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296,
756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296,
756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296, 756, 1296,
756, 1296, 756, 4104,
};

const unsigned short CharClassifyRLE_CP950[] = {
264, 123, 82, 59, 210, 51, 210, 35, 8, 65532, 65532, 65532, 65532, 65532, 1580, 8, 499, 276, 291, 10,
459, 524, 203, 76, 235, 276, 115, 162, 100, 386, 524, 418, 572, 11, 34, 65532, 8612, 82, 65532, 49188,
};

const unsigned short CharClassifyRLE_CP1361[] = {
264, 123, 82, 59, 210, 51, 210, 35, 65528, 65528, 65528, 65528, 7736, 132, 8, 92, 24, 12, 248, 12,
248, 12, 248, 12, 248, 12, 760, 12, 248, 12, 248, 12, 248, 12, 248, 12, 248, 12, 760, 12,
248, 12, 248, 12, 248, 12, 248, 12, 248, 12, 760, 12, 248, 12, 248, 12, 248, 12, 1272, 12,
248, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 1048, 12, 248, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 1048, 12, 248, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 1048, 12, 248, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 1048, 12, 248, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 1048, 12, 248, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 1048, 12, 248, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
1048, 12, 248, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 1048, 12, 248, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 1048, 12, 248, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 1048, 12,
248, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 1048, 12, 248, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 1048, 12, 248, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 1048, 12, 248, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 1048, 12, 248, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 1048, 12, 248, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 1048, 12, 248, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
1048, 12, 248, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140,
8, 92, 24, 140, 8, 92, 1048, 12, 248, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92, 24, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 536, 140, 8, 92,
24, 140, 8, 92, 24, 140, 8, 92, 24, 140, 8, 92, 11168, 59, 8, 259, 10, 291, 144, 179,
10, 67, 10, 443, 584, 123, 82, 59, 210, 51, 114, 144, 98, 35, 408, 348, 400, 82, 40, 82,
56, 194, 64, 114, 144, 82, 48, 547, 608, 27, 10, 419, 10, 171, 144, 11, 120, 34, 8, 10,
8, 66, 8, 435, 194, 400, 130, 435, 66, 144, 130, 668, 488, 628, 144, 68, 64, 266, 120, 266,
2552, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884,
400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884,
400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884,
400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884,
400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884, 400, 628, 144, 884,
400, 628, 144, 884, 12296,
};
//dbcs--Autogenerated -- end of section automatically generated
}

DBCSCharClassify::DBCSCharClassify(int codePage_) noexcept:
	codePage(codePage_),
	leadByte{},
	invalidLeadByte{},
	invalidTrailByte{} {
	// Byte ranges found in Wikipedia articles with relevant search strings in each case
	switch (codePage_) {
	case 932:
		// Shift_JIS
		SetRange(leadByte, 0x81, 0x9F);
		SetRange(leadByte, 0xE0, 0xFC);
		// Lead bytes F0 to FC may be a Microsoft addition.

		invalidLeadByte[0x85] = true;
		invalidLeadByte[0x86] = true;
		invalidLeadByte[0xEB] = true;
		invalidLeadByte[0xEC] = true;
		invalidLeadByte[0xEF] = true;
		invalidLeadByte[0xFA] = true;
		invalidLeadByte[0xFB] = true;
		invalidLeadByte[0xFC] = true;

		SetRange(invalidTrailByte, 0x00, 0x3F);
		invalidTrailByte[0x7F] = true;
		SetRange(invalidTrailByte, 0xFD, 0xFF);

		ExpandRLE(CharClassifyRLE_CP932, classifyMap);
		break;

	case 936:
		// GBK
		SetRange(leadByte, 0x81, 0xFE);

		invalidLeadByte[0x80] = true;
		invalidLeadByte[0xFF] = true;

		SetRange(invalidTrailByte, 0x00, 0x3F);
		invalidTrailByte[0x7F] = true;
		invalidTrailByte[0xFF] = true;

		ExpandRLE(CharClassifyRLE_CP936, classifyMap);
		break;

	case 949:
		// Korean Unified Hangul Code, Wansung KS C-5601-1987
		SetRange(leadByte, 0x81, 0xFE);

		invalidLeadByte[0x80] = true;
		invalidLeadByte[0xC9] = true;
		invalidLeadByte[0xFE] = true;
		invalidLeadByte[0xFF] = true;

		SetRange(invalidTrailByte, 0x00, 0x40);
		SetRange(invalidTrailByte, 0x5B, 0x60);
		SetRange(invalidTrailByte, 0x7B, 0x80);
		invalidTrailByte[0xFF] = true;

		ExpandRLE(CharClassifyRLE_CP949, classifyMap);
		break;

	case 950:
		// Big5
		SetRange(leadByte, 0x81, 0xFE);

		SetRange(invalidLeadByte, 0x80, 0xA0);
		invalidLeadByte[0xC8] = true;
		SetRange(invalidLeadByte, 0xFA, 0xFF);

		SetRange(invalidTrailByte, 0x00, 0x3F);
		SetRange(invalidTrailByte, 0x7F, 0xA0);
		invalidTrailByte[0xFF] = true;

		ExpandRLE(CharClassifyRLE_CP950, classifyMap);
		break;

	case 1361:
		// Korean Johab, KS C-5601-1992
		SetRange(leadByte, 0x84, 0xD3);
		SetRange(leadByte, 0xD8, 0xDE);
		SetRange(leadByte, 0xE0, 0xF9);

		SetRange(invalidLeadByte, 0x80, 0x83);
		SetRange(invalidLeadByte, 0xD4, 0xD8);
		invalidLeadByte[0xDF] = true;
		SetRange(invalidLeadByte, 0xFA, 0xFF);

		SetRange(invalidTrailByte, 0x00, 0x30);
		invalidTrailByte[0x80] = true;
		invalidTrailByte[0xFF] = true;

		ExpandRLE(CharClassifyRLE_CP1361, classifyMap);
		break;
	}
}

const DBCSCharClassify* DBCSCharClassify::Get(int codePage) {
	if (IsDBCSCodePage(codePage)) {
		for (const auto &dbcs : dbcsCharClassifyList) {
			if (dbcs->codePage == codePage) {
				return dbcs.get();
			}
		}

		dbcsCharClassifyList.push_back(std::unique_ptr<DBCSCharClassify>(new DBCSCharClassify(codePage)));
		return dbcsCharClassifyList.back().get();
	}
	return nullptr;
}
